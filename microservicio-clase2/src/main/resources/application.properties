spring.application.name=clase-service
spring.datasource.url=jdbc:h2:mem:circulaciondb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
server.port=8083

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/gimnasio
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs


keycloak.auth-server-url=http://localhost:8080/auth
keycloak.realm=gimnasio
keycloak.resource=clase-service
keycloak.public-client=false
keycloak.credentials.secret=oOZ5lpKPMvm2hXSU9G5Z9Q8rBH1dE39a
logging.level.org.springframework.security=DEBUG

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.streams.application-id=entrenador-app
spring.kafka.streams.state-dir=/tmp/kafka-streams

spring.main.allow-bean-definition-overriding=true

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

log.retention.hours=168   # Retener logs por 7 días
log.retention.bytes=1073741824  # 1GB por log segment
log.segment.bytes=536870912  # 512MB por segmento
log.cleanup.policy=delete  # Eliminar logs viejos automáticamente

# Eureka Client Configuration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Opcional: si quieres ver en logs que el registro fue exitoso
logging.level.com.netflix.discovery=DEBUG